version = "0.2.1"
description = "Combinators for binding to C libraries without writing any C."
requires = "unix bigarray"
archive(byte) = "ctypes-base.cma"
archive(byte, plugin) = "ctypes-base.cma"
archive(native) = "ctypes-base.cmxa"
archive(native, plugin) = "ctypes-base.cmxs"
exists_if = "ctypes-base.cma"

package "top" (
  version = "0.2.1"
  description = "Toplevel printers for C types"
  requires = "ctypes"
  archive(byte) = "ctypes-top.cma"
  archive(byte, plugin) = "ctypes-top.cma"
  archive(native) = "ctypes-top.cmxa"
  archive(native, plugin) = "ctypes-top.cmxs"
  exists_if = "ctypes-top.cma"
)

package "foreign-base" (
 version = "0.2.1"
 description = "Dynamic linking of C functions"
 requires = "ctypes"
 archive(byte) = "ctypes-foreign-base.cma"
 archive(byte, plugin) = "ctypes-foreign-base.cma"
 archive(native) = "ctypes-foreign-base.cmxa"
 archive(native, plugin) = "ctypes-foreign-base.cmxs"
 exists_if = "ctypes-foreign-base.cma"
)

package "foreign" (
 version = "0.2.1"
 description = "Dynamic linking of C functions"
 requires = "ctypes ctypes.foreign-base"
 requires(mt) = "threads ctypes ctypes.foreign-base"
 archive(byte, mt) = "ctypes-foreign-threaded.cma"
 archive(byte, plugin, mt) = "ctypes-foreign-threaded.cma"
 archive(native, mt) = "ctypes-foreign-threaded.cmxa"
 archive(native, plugin, mt) = "ctypes-foreign-threaded.cmxs"
 archive(byte) = "ctypes-foreign-unthreaded.cma"
 archive(byte, plugin) = "ctypes-foreign-unthreaded.cma"
 archive(native) = "ctypes-foreign-unthreaded.cmxa"
 archive(native, plugin) = "ctypes-foreign-unthreaded.cmxs"
 exists_if = "ctypes-foreign-threaded.cma"
)
